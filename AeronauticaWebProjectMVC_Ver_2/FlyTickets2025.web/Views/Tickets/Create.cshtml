@model FlyTickets2025.web.Data.Entities.Ticket

@{
    ViewData["Title"] = "Create Ticket";
    var selectedFlightDetails = ViewBag.SelectedFlightDetails as FlyTickets2025.web.Data.Entities.Flight;
}

<h1>Create Ticket</h1>
<h4>Ticket Details</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            @if (selectedFlightDetails != null)
            {
                <div class="card card-body bg-light mb-3">
                    <h5>Selected Flight: @selectedFlightDetails.FlightNumber</h5>
                    <p>
                        From: @selectedFlightDetails.OriginCity?.Name <br />
                        To: @selectedFlightDetails.DestinationCity?.Name <br />
                        Departs: @selectedFlightDetails.DepartureTime.ToString("dd-MM-yyyy HH:mm") <br />
                        Aircraft: @selectedFlightDetails.Aircraft?.Model
                    </p>
                </div>
            }

            @*             <div class="form-group mb-3">
                <label asp-for="ApplicationUserId" class="control-label"></label>
                <select asp-for="ApplicationUserId" class="form-control" asp-items="ViewBag.ApplicationUserId"></select>
                <span asp-validation-for="ApplicationUserId" class="text-danger"></span>
            </div>
 *@
            <div class="form-group mb-3">
                <label asp-for="SeatId" class="control-label"></label>
                <select asp-for="SeatId" class="form-control" asp-items="ViewBag.SeatId" id="SeatId">
                    <option value="">-- Select Seat --</option>
                </select>
                <span asp-validation-for="SeatId" class="text-danger"></span>

                <div class="mt-2">
                    <strong>Preço do Assento:</strong>
                    <span id="seatPrice">0,00 €</span>
                </div>
            </div>

            @*             <div class="form-group mb-3">
                <label asp-for="PassengerType" class="control-label"></label>
                <select asp-for="PassengerType" class="form-control" asp-items="Html.GetEnumSelectList<FlyTickets2025.web.Data.Entities.PassengerType>()">
                    <option value="">-- Select Passenger Type --</option>
                </select>
                <span asp-validation-for="PassengerType" class="text-danger"></span>
            </div>
 *@
            @*             <div class="form-group form-check mb-3">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsBooked" disabled="disabled" />
                    @Html.DisplayNameFor(model => model.IsBooked)
                    <input type="hidden" asp-for="IsBooked" />
                </label>
            </div>
 *@
            @*             <div class="form-group mb-3">
                <label asp-for="PurchaseDate" class="control-label"></label>
                <input asp-for="PurchaseDate" class="form-control" readonly="readonly" />
                <span asp-validation-for="PurchaseDate" class="text-danger"></span>
            </div>
 *@
            @*             <div class="form-group mb-3">
                <label asp-for="TicketPrice" class="control-label"></label>
                <input asp-for="TicketPrice" class="form-control" id="TicketPrice" />
                <span asp-validation-for="TicketPrice" class="text-danger"></span>
            </div>
 *@
            @if (this.User.Identity.IsAuthenticated)
            {
                <div class="form-group mb-3">
                    <label asp-for="ClientName" class="control-label"></label>
                    <input asp-for="ClientName" class="form-control" readonly="readonly" /> 
                    <span asp-validation-for="ClientName" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="ApplicationUser.FirstName" class="control-label"></label>
                    <input asp-for="ApplicationUser.FirstName" class="form-control" readonly="readonly" />
                    <span asp-validation-for="ApplicationUser.FirstName" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="ApplicationUser.LastName" class="control-label"></label>
                    <input asp-for="ApplicationUser.LastName" class="form-control" readonly="readonly" />
                    <span asp-validation-for="ApplicationUser.LastName" class="text-danger"></span>
                </div>
            }
            else
            {
                <div class="form-group mb-3">
                    <label asp-for="ClientName" class="control-label"></label>
                    <input asp-for="ClientName" class="form-control" /> @* Editável para não autenticados *@
                    <span asp-validation-for="ClientName" class="text-danger"></span>
                </div>
            }

            @*             <div class="form-group mb-3">
                <label asp-for="FlightDate" class="control-label"></label>
                <input asp-for="FlightDate" class="form-control" type="date" />
                <span asp-validation-for="FlightDate" class="text-danger"></span>
            </div>
 *@
            <div class="form-group">
                <input type="submit" value="Buy" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        const seatPrices = @Html.Raw(ViewBag.SeatPricesJson);
        const seatSelect = document.getElementById("SeatId");
        const seatPriceDisplay = document.getElementById("seatPrice");
        const ticketPriceInput = document.getElementById("TicketPrice");

        function updateSeatPrice() {
            const selectedId = parseInt(seatSelect.value);
            const seat = seatPrices.find(s => s.id === selectedId);

            if (seat && typeof seat.value === "number") {
                const formatted = seat.value.toLocaleString("pt-PT", {
                    style: "currency",
                    currency: "EUR"
                });

                seatPriceDisplay.textContent = formatted;

                if (ticketPriceInput) {
                    ticketPriceInput.value = seat.value;
                }
            } else {
                seatPriceDisplay.textContent = "0,00 €";
                if (ticketPriceInput) {
                    ticketPriceInput.value = 0;
                }
            }
        }

        if (seatSelect) {
            seatSelect.addEventListener("change", updateSeatPrice);
            window.addEventListener("DOMContentLoaded", updateSeatPrice);
        }
    </script>
}