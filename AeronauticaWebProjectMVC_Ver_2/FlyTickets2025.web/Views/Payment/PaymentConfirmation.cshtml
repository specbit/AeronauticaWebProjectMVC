@model FlyTickets2025.web.Data.Entities.Ticket

@{
    ViewData["Title"] = "Confirmação de Pagamento";
}

<h1>Confirmação de Pagamento</h1>
<h4>Revise os dados antes de finalizar a compra</h4>
<hr />

<div class="row">
    <div class="col-md-6">
        <div class="card card-body mb-4 bg-light">
            <h5>Dados do Bilhete</h5>
            <p>
                <strong>Cliente:</strong> @Model.ClientName <br />
                <strong>Voo:</strong> @Model.Flight?.FlightNumber <br />
                <strong>Origem:</strong> @Model.Flight?.OriginCity?.AirportName - @Model.Flight?.OriginCity?.Name <br />
                <strong>Destino:</strong> @Model.Flight?.DestinationCity?.AirportName - @Model.Flight?.DestinationCity?.Name <br />
                <strong>Partida:</strong> @Model.FlightDate.ToString("dd/MM/yyyy HH:mm") <br />
                <strong>Assento:</strong> @Model.Seat?.SeatNumber <br />
                <strong>Valor:</strong> @Model.TicketPrice.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("pt-PT"))
            </p>
        </div>
    </div>

    <div class="col-md-6">
        <div class="card card-body shadow-sm">
            <h5>Pagamento com Cartão de Crédito</h5>
            <form asp-action="PaymentConfirmationDone" method="post" id="paymentForm" novalidate>
                @* Campos ocultos *@
                <input type="hidden" asp-for="Id" />
                <input type="hidden" asp-for="FlightId" />
                <input type="hidden" asp-for="ApplicationUserId" />
                <input type="hidden" asp-for="SeatId" />
                <input type="hidden" asp-for="PassengerType" />
                <input type="hidden" asp-for="IsBooked" />
                <input type="hidden" asp-for="PurchaseDate" />
                <input type="hidden" asp-for="TicketPrice" />
                <input type="hidden" asp-for="ClientName" />
                <input type="hidden" asp-for="FlightDate" />
                <input type="hidden" asp-for="PassengerFullName" />
                <input type="hidden" asp-for="DocumentType" />
                <input type="hidden" asp-for="DocumentNumber" />


                <div class="form-group mb-3">
                    <label for="CardHolderName">Nome do Titular</label>
                    <input type="text" class="form-control" id="CardHolderName" name="CardHolderName" required minlength="2" />
                    <div class="invalid-feedback">
                        Por favor, insira o nome do titular (mínimo 2 caracteres).
                    </div>
                </div>

                <div class="form-group mb-3">
                    <label for="CardNumber">Número do Cartão</label>
                    <input type="text" class="form-control" id="CardNumber" name="CardNumber" required pattern="^\d{16}$" maxlength="16" placeholder="0000000000000000" inputmode="numeric" />
                    <div class="invalid-feedback">
                        Por favor, insira um número de cartão válido com 16 dígitos.
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label for="ExpirationDate">Validade (MM/AA)</label>
                        <input type="text" class="form-control" id="ExpirationDate" name="ExpirationDate" placeholder="MM/AA" required pattern="^(0[1-9]|1[0-2])\/\d{2}$" maxlength="5" />
                        <div class="invalid-feedback" id="expirationFeedback">
                            Por favor, insira uma validade válida (MM/AA) e que não esteja expirada.
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label for="CVV">CVV</label>
                        <input type="text" class="form-control" id="CVV" name="CVV" placeholder="123" required pattern="^\d{3}$" maxlength="3" inputmode="numeric" />
                        <div class="invalid-feedback">
                            Por favor, insira um CVV válido de 3 dígitos.
                        </div>
                    </div>
                </div>

                <div class="form-group mt-3">
                    <button type="submit" class="btn btn-success btn-block w-100">Pagar Agora</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="mt-3">
    <a asp-action="Index" class="btn btn-outline-secondary">Cancelar e Voltar</a>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            'use strict';

            const form = document.getElementById('paymentForm');
            const expirationInput = document.getElementById('ExpirationDate');
            const expirationFeedback = document.getElementById('expirationFeedback');

            // Inserção automática da barra
            expirationInput.addEventListener('input', function () {
                let value = expirationInput.value.replace(/\D/g, '');
                if (value.length > 2) {
                    value = value.slice(0, 2) + '/' + value.slice(2, 4);
                }
                expirationInput.value = value;
            });

            form.addEventListener('submit', function (event) {
                const expVal = expirationInput.value.trim();
                let isValid = form.checkValidity();

                if (!isValidExpirationDate(expVal)) {
                    isValid = false;
                    expirationInput.classList.add('is-invalid');
                    expirationFeedback.textContent = "Data de validade inválida ou expirada.";
                } else {
                    expirationInput.classList.remove('is-invalid');
                    expirationInput.classList.add('is-valid');
                }

                if (!isValid) {
                    event.preventDefault();
                    event.stopPropagation();
                }

                form.classList.add('was-validated');
            }, false);

            function isValidExpirationDate(value) {
                const regex = /^(0[1-9]|1[0-2])\/(\d{2})$/;
                const match = regex.exec(value);
                if (!match) return false;

                const month = parseInt(match[1], 10);
                const year = parseInt(match[2], 10);

                const now = new Date();
                const currentYear = now.getFullYear() % 100;
                const currentMonth = now.getMonth() + 1;

                if (year < currentYear) return false;
                if (year === currentYear && month < currentMonth) return false;

                return true;
            }
        });
    </script>
}